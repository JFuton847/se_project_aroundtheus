!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:r}=e;this._name=n,this._link=r,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._formEl=e,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))})),this._toggleButtonState()}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault(),this.disableButton()})),this._setEventListeners()}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close-button"))&&this.close()}))}}var n=class extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__form-input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this._popupForm.reset(),this.close()})),super.setEventListeners()}};const r={inputSelector:".modal__form-input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__form-input_type_error",errorClass:"modal__error_visible"};document.querySelector(".profile__name"),document.querySelector(".profile__title");const o=document.querySelector("#profile-name-input"),i=(document.querySelector("#image-url-input"),document.querySelector("#profile-title-input")),l=document.querySelector("#profile-edit-modal"),a=l.querySelector("#profile-modal-form"),c=document.querySelector("#add-card-modal"),u=c.querySelector("#add-card-form"),d=(document.querySelector(".cards"),document.querySelector("#card-template").content.firstElementChild,u.querySelector("#card-title-input"),u.querySelector("#image-url-input"),document.querySelectorAll(".modal"),document.querySelector("#profile-edit-button"),l.querySelector("#profile-edit-close-button"),document.querySelector(".profile__add-button")),m=(c.querySelector("#add-card-close-button"),document.querySelector("#preview-image-close-button"),new n("#profile-edit-modal",(e=>{S.setUserInfo({name:e.name,title:e.title}),m.close()})));d.addEventListener("click",(()=>h.open())),document.querySelector("#profile-edit-button").addEventListener("click",(()=>{const{name:e,title:t}=S.getUserInfo();o.value=e,i.value=t,m.open()}));const _=new t(a,r);new t(u,r).enableValidation(),_.enableValidation();const h=new n("#add-card-modal",(e=>{const t=f({name:e.title,link:e.url});v.addItem(t)}));h.setEventListeners(),m.setEventListeners();const p=new class extends s{constructor(e){super(e),this._image=this._popupElement.querySelector("#modal-image"),this._caption=this._popupElement.querySelector("#modal-preview-image-title")}open(e){this._image.src=e.link,this._image.alt=e.name,this._caption.textContent=e.name,super.open()}}("#preview-image-modal");function E(e,t){p.open({name:e,link:t})}p.setEventListeners();const S=new class{constructor(e){let{profileNameSelector:t,titleSelector:s}=e;this._profileName=document.querySelector(t),this._profileTitle=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,title:this._profileTitle.textContent}}setUserInfo(e){let{name:t,title:s}=e;this._profileName.textContent=t,this._profileTitle.textContent=s}}({profileNameSelector:".profile__name",titleSelector:".profile__title"});function f(t){return new e(t,"#card-template",E).getView()}const v=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:function(e){const t=f(e);v.addItem(t)}},".cards");v.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,