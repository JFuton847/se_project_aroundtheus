!function(){"use strict";class e{constructor(e,t,s,r,i){let{name:n,link:o,_id:a,isLiked:l}=e;this._name=n,this._link=o,this._id=a,this._cardSelector=t,this._handleImageClick=s,this.handleDeleteClick=r,this.handleLikeClick=i,this.isLiked=l}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(e=>{e.stopPropagation(),this.handleLikeClick(this)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(e=>{e.stopPropagation(),this.handleDeleteClick(this._id,this._cardElement)})),this._cardElement.addEventListener("click",(e=>{e.stopPropagation(),this._handleImageClick(this._name,this._link)}))}likeCard(){this._cardElement.querySelector(".card__like-button").classList.add("card__like-button_active")}unlikeCard(){this._cardElement.querySelector(".card__like-button").classList.remove("card__like-button_active")}handleLikeIcon(e){void 0!==e&&(this.isLiked=e),this.isLiked?this.likeCard():this.unlikeCard()}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){const e=document.querySelector(this._cardSelector);if(!e)throw new Error(`Template selector "${this._cardSelector}" not found.`);return e.content.querySelector(".card").cloneNode(!0)}getView(){this._cardElement=this._getTemplate(),this._cardElement.setAttribute("data-id",this._id),this._setEventListeners();const e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=`Image of ${this._name}`,this._cardElement.querySelector(".card__title").textContent=this._name,this.handleLikeIcon(this.isLiked),this._cardElement}}class t{constructor(e,t){this._formEl=e,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))})),this._toggleButtonState()}enableValidation(){this._formEl.addEventListener("reset",(()=>{this.disableButton()})),this._setEventListeners()}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close-button"))&&this.close()}))}}var r=class extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleCardFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__form-input"),this._submitButton=this._popupForm.querySelector(".modal__save-button"),this._submitButtonOriginalText=this._submitButton.textContent}renderLoading(e){this._submitButton.textContent=e?"Saving...":this._submitButtonOriginalText}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}disableSubmitButton(){this._submitButton.disabled=!0}enableSubmitButton(){this._submitButton.disabled=!1}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this.renderLoading(!0),this.disableSubmitButton(),this._handleCardFormSubmit(t).then((()=>{console.log("Success:",t),this.close(),this._popupForm.reset()})).catch((e=>{console.error(`ERROR DURING FORM SUBMISSION: ${e}`)})).finally((()=>{this.renderLoading(!1),this.enableSubmitButton()}))})),super.setEventListeners()}};const i={inputSelector:".modal__form-input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__form-input_type_error",errorClass:"modal__error_visible"};var n=class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}};document.querySelector(".profile__name"),document.querySelector(".profile__title");const o=document.querySelector("#profile-name-input"),a=(document.querySelector("#image-url-input"),document.querySelector("#profile-title-input")),l=document.querySelector("#profile-edit-modal"),d=l.querySelector("#profile-modal-form"),c=document.querySelector("#update-avatar-modal").querySelector("#update-avatar-form"),u=document.querySelector("#add-card-modal"),h=u.querySelector("#add-card-form"),_=(document.querySelector(".cards"),document.querySelector("#card-template").content.firstElementChild,h.querySelector("#card-title-input"),h.querySelector("#image-url-input"),document.querySelectorAll(".modal"),document.querySelector("#avatar-edit-button")),m=(document.querySelector("#profile-edit-button"),l.querySelector("#profile-edit-close-button"),document.querySelector(".profile__add-button")),p=(u.querySelector("#add-card-close-button"),document.querySelector("#preview-image-close-button"),new r("#profile-edit-modal",(e=>U.updateUserProfile({name:e.name,about:e.about}).then((()=>{y.setUserInfo({name:e.name,about:e.about})}))))),E=new r("#add-card-modal",(e=>{const t=e.title,s=e.url;return U.createCards({name:t,link:s}).then((e=>{const t=q(e);R.addItem(t)}))}));E.setEventListeners();const v=new r("#update-avatar-modal",(e=>U.updateAvatar({avatar:e.avatar}).then((e=>{y.setUserAvatar({avatar:e.avatar})}))));_.addEventListener("click",(()=>{v.open()})),v.setEventListeners(),m.addEventListener("click",(()=>E.open())),document.querySelector("#profile-edit-button").addEventListener("click",(()=>{const{name:e,about:t}=y.getUserInfo();o.value=e,a.value=t,p.open()}));const b=new t(d,i),S=new t(h,i),f=new t(c,i);S.enableValidation(),b.enableValidation(),f.enableValidation(),p.setEventListeners();const C=new class extends s{constructor(e){super(e),this._image=document.querySelector("#modal-image"),this._caption=document.querySelector("#modal-preview-image-title")}open(e){this._image.src=e.link,this._image.alt=e.name,this._caption.textContent=e.name,super.open()}}("#preview-image-modal");function L(e,t){C.open({name:e,link:t})}C.setEventListeners();const y=new class{constructor(e){let{profileNameSelector:t,aboutSelector:s,avatarSelector:r}=e;this._profileName=document.querySelector(t),this._profileTitle=document.querySelector(s),this._profileAvatar=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,about:this._profileTitle.textContent,avatar:this._profileAvatar.url}}setUserInfo(e){let{name:t,about:s}=e;this._profileName.textContent=t,this._profileTitle.textContent=s}setUserAvatar(e){let{avatar:t}=e;this._profileAvatar.src=t}}({profileNameSelector:".profile__name",aboutSelector:".profile__title",avatarSelector:".profile__avatar"}),k=new class extends s{constructor(e,t){super(e),this._handleConfirm=t,this._confirmButton=document.querySelector(".modal__save-button_confirmation"),this._setEventListeners()}open(e,t){super.open(),this._cardId=e,this._cardElement=t}_setEventListeners(){super.setEventListeners(),this._confirmButton.addEventListener("click",(()=>{this._handleConfirm(this._cardId,this._cardElement).then((()=>{this.close()})).catch((e=>{console.error("Error Deleting Cards:",e)}))}))}}(".modal__confirm",((e,t)=>U.deleteCard(e).then((()=>{t.remove()})).catch((e=>{console.error(`ERROR DELETING CARD ${e}`)}))));function g(e,t){k.open(e,t)}function q(t){return new e({...t,isLiked:t.isLiked},"#card-template",L,g,I).getView()}function I(e){e.isLiked?U.dislikeACard(e._id).then((()=>{e.unlikeCard(),e.isLiked=!1})).catch((e=>{console.error(`ERROR DISLIKING CARD ${e}`)})):U.likeACard(e._id).then((t=>{e.likeCard(),e.isLiked=!0})).catch((e=>{console.error(`ERROR LIKING CARD ${e}`)}))}function B(e){const t=q(e);R.addItem(t)}let R;const U=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){return e.ok?e.json():Promise.reject(new Error(`Error ${e.status}: ${e.statusText}`))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._handleResponse)}createCards(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._handleResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}likeACard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleResponse)}dislikeACard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._handleResponse)}updateUserProfile(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._handleResponse)}updateAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._handleResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"642370a4-ceb6-4d04-bc83-246d61a4c38e","Content-Type":"application/json"}});U.getInitialCards().then((e=>{console.log("Fetched cards:",e),R=new n({items:e.reverse(),renderer:B},".cards"),R.renderItems()})).catch((e=>{console.error(`ERROR FETCHING CARDS ${e}`)})),U.getUserInfo().then((e=>{console.log("Fetched user data:",e),y.setUserInfo({name:e.name,about:e.about}),y.setUserAvatar({avatar:e.avatar})})).catch((e=>{console.error(`ERROR FETCHING USER INFO ${e}`)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,